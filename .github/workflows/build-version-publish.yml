name: Build, Version & Publish Container Image & Action

# This workflow builds the prebuild.Dockerfile and publishes the image to the GitHub Container Registry if the build is successful.
# It also creates a new release and tags the release with the new version number if the build is successful and the PR is merged.

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  packages: write
  contents: read

env:
  IMAGE_NAME: github-tag-action
  REGISTRY_USER: cattledip
  REGISTRY: ghcr.io

# One build per branch, cancel out of date builds
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-container-image:
    timeout-minutes: 15
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Container Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_USER }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.description="GitHub Action to automatically tag and release a new version of your project"
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Set up QEMU To support build amd64 and arm64 images
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push container image
        uses: docker/build-push-action@v3
        id: docker_build
        with:
          push: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}
          context: .
          file: ./prebuild.Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Output image, digest and metadata to summary
        run: |
          {
          echo imageid: "${{ steps.docker_build.outputs.imageid }}"
          echo digest: "${{ steps.docker_build.outputs.digest }}"
          echo labels: "${{ steps.meta.outputs.labels }}"
          echo tags: "${{ steps.meta.outputs.tags }}"
          echo version: "${{ steps.meta.outputs.version }}"
          } >> "$GITHUB_STEP_SUMMARY"

  bump-version:
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 10
    needs: build-container-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.REGISTRY_USER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: version-tag
        id: tag
        uses: cattledip/github-tag-action@main
        env:
          VERBOSE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # auto releases is not working atm and is deleting releases due branch tags
      - name: automatic-draft-release
        uses: marvinpinto/action-automatic-releases@v1.2.1 #TODO: review if marvinpinto/action-automatic-releases is still the best release action
        with:
          draft: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          title: "${{ steps.tag.outputs.tag }}: [title-edit-me] by:${{ github.actor }}"
          automatic_release_tag: ${{ steps.tag.outputs.new_tag }}

      - name: version-tag-major #TODO: refactor / replace version-tag-major with a better solution, or at least call out to a script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch --tags
          tagFmt="^v?[0-9]+\.[0-9]+\.[0-9]+$"
          tag="$(git for-each-ref --sort=-v:refname --format '%(refname:lstrip=2)' | grep -E "$tagFmt" | head -n 1)"
          [[ "$tag" =~ ^([0-9]+) ]] # use ^(v[0-9]+) for vX
          major=${BASH_REMATCH[1]}
          # update major tag
          git tag -f "$major"
          git push -f origin "$major"
          # add vX as 1 is linked to short sha bug https://github.com/anothrNick/github-tag-action/actions/runs/3139501775/jobs/5099976842#step:1:35
          git tag -f "v$major"
          git push -f origin "v$major"
